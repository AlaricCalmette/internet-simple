{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alari\\\\code\\\\internet-simple\\\\components\\\\TopBar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function () {\n  return {\n    topBar: {\n      marginBottom: 30,\n      backgroundColor: '#E5989B'\n    },\n    toolBar: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    tagButton: {\n      marginRight: 15\n    }\n  };\n});\n\nvar TopBar = function TopBar(_ref) {\n  _s();\n\n  var tags = _ref.tags,\n      setSelectedTag = _ref.setSelectedTag;\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    className: classes.topBar,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolBar,\n      children: [tags.map(function (tag) {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.tagButton,\n          variant: \"contained\",\n          onClick: function onClick() {\n            return setSelectedTag(tag);\n          },\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.tagButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return setSelectedTag(undefined);\n        },\n        children: \"Tout\"\n      }, \"all\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TopBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TopBar;\nexport default TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["C:/Users/alari/code/internet-simple/components/TopBar.tsx"],"names":["makeStyles","AppBar","Toolbar","Button","useStyles","topBar","marginBottom","backgroundColor","toolBar","display","justifyContent","tagButton","marginRight","TopBar","tags","setSelectedTag","classes","map","tag","undefined"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC;AAAA,SAAO;AAChCK,IAAAA,MAAM,EAAE;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,eAAe,EAAE;AAFb,KADwB;AAKhCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE;AAFX,KALuB;AAShCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AATqB,GAAP;AAAA,CAAD,CAA5B;;AAmBA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAyC;AAAA;;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,cAAiC,QAAjCA,cAAiC;AACpD,MAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,sBACI,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEY,OAAO,CAACX,MAA7C;AAAA,2BACQ,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEW,OAAO,CAACR,OAA5B;AAAA,iBACKM,IAAI,CAACG,GAAL,CAAS,UAAAC,GAAG;AAAA,4BACT,QAAC,MAAD;AACI,UAAA,SAAS,EAAEF,OAAO,CAACL,SADvB;AAEI,UAAA,OAAO,EAAC,WAFZ;AAII,UAAA,OAAO,EAAE;AAAA,mBAAMI,cAAc,CAACG,GAAD,CAApB;AAAA,WAJb;AAAA,oBAMKA;AANL,WAGSA,GAHT;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAZ,CADL,eAWI,QAAC,MAAD;AACI,QAAA,SAAS,EAAEF,OAAO,CAACL,SADvB;AAEI,QAAA,OAAO,EAAC,WAFZ;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMI,cAAc,CAACI,SAAD,CAApB;AAAA,SAJb;AAAA;AAAA,SAGQ,KAHR;AAAA;AAAA;AAAA;AAAA,eAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CA1BD;;GAAMN,M;UACcT,S;;;KADdS,M;AA4BN,eAAeA,MAAf","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    topBar: {\r\n        marginBottom: 30,\r\n        backgroundColor: '#E5989B',\r\n    },\r\n    toolBar: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    tagButton: {\r\n        marginRight: 15,\r\n    },\r\n}));\r\n\r\ninterface TopBarProps {\r\n    tags: string[];\r\n    setSelectedTag: (tag: string) => void;\r\n}\r\n\r\nconst TopBar = ({tags, setSelectedTag}: TopBarProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.topBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    {tags.map(tag => (\r\n                        <Button\r\n                            className={classes.tagButton}\r\n                            variant=\"contained\"\r\n                            key={tag}\r\n                            onClick={() => setSelectedTag(tag)}\r\n                        >\r\n                            {tag}\r\n                        </Button>\r\n                    ))}\r\n                    <Button\r\n                        className={classes.tagButton}\r\n                        variant=\"contained\"\r\n                        key=\"all\"\r\n                        onClick={() => setSelectedTag(undefined)}\r\n                    >\r\n                        Tout\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n    );\r\n};\r\n\r\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}