{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/caseSensitive/Code/internet-simple/pages/index.tsx\";\nimport { getAllPosts } from \"../lib/api\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { useState } from \"react\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  topBar: {\n    marginBottom: 30\n  },\n  toolBar: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  tagButton: {\n    marginRight: 15\n  }\n}));\n\nconst Home = ({\n  posts,\n  tags\n}) => {\n  const {\n    0: tagSelected,\n    1: setTagSelected\n  } = useState();\n  const classes = useStyles();\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.topBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolBar,\n        children: [tags.map(tag => /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.tagButton,\n          variant: \"contained\",\n          onClick: () => setTagSelected(tag),\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.tagButton,\n          variant: \"contained\",\n          onClick: () => setTagSelected(undefined),\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 2,\n        children: posts.filter(post => {\n          var _post$tags;\n\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n          return tagSelected == undefined || ((_post$tags = post.tags) === null || _post$tags === void 0 ? void 0 : _post$tags.includes(tagSelected));\n        }).map(post => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: [post.title, /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                children: \"Learn More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)\n        }, post.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // eslint-disable-next-line @typescript-eslint/require-await\n\n\nexport async function getStaticProps() {\n  const posts = getAllPosts(['title', 'slug', 'author', 'tags']);\n  const tags = new Set();\n  posts.forEach(post => {\n    var _post$tags2;\n\n    (_post$tags2 = post.tags) === null || _post$tags2 === void 0 ? void 0 : _post$tags2.forEach(tag => {\n      tags.add(tag);\n    });\n  });\n  return {\n    props: {\n      posts,\n      tags: Array.from(tags)\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Volumes/caseSensitive/Code/internet-simple/pages/index.tsx"],"names":["getAllPosts","makeStyles","Grid","Card","CardActions","AppBar","Toolbar","Button","useState","useStyles","theme","root","minWidth","menuButton","marginRight","spacing","title","flexGrow","topBar","marginBottom","toolBar","display","justifyContent","tagButton","Home","posts","tags","tagSelected","setTagSelected","classes","console","log","map","tag","undefined","filter","post","includes","slug","getStaticProps","Set","forEach","add","props","Array","from"],"mappings":"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","sourcesContent":["import { getAllPosts } from \"../lib/api\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    topBar: {\n        marginBottom: 30,\n    },\n    toolBar: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    tagButton: {\n        marginRight: 15,\n    },\n}));\n\nconst Home = ({ posts, tags }) => {\n    const [tagSelected, setTagSelected] = useState();\n    const classes = useStyles();\n    console.log(posts);\n    return (\n        <>\n            <AppBar position=\"static\" className={classes.topBar}>\n                <Toolbar className={classes.toolBar}>\n                    {tags.map(tag => (\n                        <Button\n                            className={classes.tagButton}\n                            variant=\"contained\"\n                            key={tag}\n                            onClick={() => setTagSelected(tag)}\n                        >\n                            {tag}\n                        </Button>\n                    ))}\n                    <Button\n                        className={classes.tagButton}\n                        variant=\"contained\"\n                        key=\"all\"\n                        onClick={() => setTagSelected(undefined)}\n                    >\n                        All\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={2}>\n                    {posts.filter((post) => {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return tagSelected == undefined || post.tags?.includes(tagSelected);\n                    })\n                        .map((post) => (\n                            <Grid key={post.slug} item>\n                                <Card className={classes.root} >\n                                    {post.title}\n                                    <CardActions>\n                                        <Button size=\"small\">Learn More</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function getStaticProps() {\n    const posts = getAllPosts([\n        'title',\n        'slug',\n        'author',\n        'tags',\n    ]);\n    const tags = new Set();\n    posts.forEach((post) => {\n        post.tags?.forEach((tag) => {\n            tags.add(tag);\n        });\n    });\n    return {\n        props: {\n            posts,\n            tags: Array.from(tags),\n        }\n    };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}