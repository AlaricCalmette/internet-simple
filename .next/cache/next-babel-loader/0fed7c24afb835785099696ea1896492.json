{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alari\\\\code\\\\internet-simple\\\\pages\\\\posts\\\\[slug].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport { getPostBySlug, getAllPosts } from '../../lib/api';\nimport Head from 'next/head';\nimport markdownToHtml from '../../lib/markdownToHtml';\nexport default function Post({\n  post\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: router.isFallback ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"mb-32\",\n        children: [/*#__PURE__*/_jsxDEV(Head, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: [post.title, \" | Next.js Blog Example with markdown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: post.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'author', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n} // eslint-disable-next-line @typescript-eslint/require-await\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["C:/Users/alari/code/internet-simple/pages/posts/[slug].tsx"],"names":["useRouter","ErrorPage","getPostBySlug","getAllPosts","Head","markdownToHtml","Post","post","router","isFallback","slug","title","__html","content","getStaticProps","params","props","getStaticPaths","posts","paths","map","fallback"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,eAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACnC,QAAMC,MAAM,GAAGR,SAAS,EAAxB;;AACA,MAAI,CAACQ,MAAM,CAACC,UAAR,IAAsB,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,IAAP,CAA1B,EAAuC;AACnC,wBAAO,QAAC,SAAD;AAAW,MAAA,UAAU,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,cACKF,MAAM,CAACC,UAAP,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAGO;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA,gCACI,QAAC,IAAD;AAAA,iCACI;AAAA,uBACKF,IAAI,CAACI,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEL,IAAI,CAACM;AAAf;AAA9B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMR,IAAI,GAAGL,aAAa,CAACa,MAAM,CAACL,IAAR,EAAc,CACpC,OADoC,EAEpC,MAFoC,EAGpC,MAHoC,EAIpC,QAJoC,EAKpC,SALoC,EAMpC,SANoC,EAOpC,YAPoC,CAAd,CAA1B;AASA,QAAMG,OAAO,GAAG,MAAMR,cAAc,CAACE,IAAI,CAACM,OAAL,IAAgB,EAAjB,CAApC;AAEA,SAAO;AACHG,IAAAA,KAAK,EAAE;AACHT,MAAAA,IAAI,kCACGA,IADH;AAEAM,QAAAA;AAFA;AADD;AADJ,GAAP;AAQH,C,CAED;;AACA,OAAO,eAAeI,cAAf,GAAgC;AACnC,QAAMC,KAAK,GAAGf,WAAW,CAAC,CAAC,MAAD,CAAD,CAAzB;AAEA,SAAO;AACHgB,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAWb,IAAD,IAAU;AACvB,aAAO;AACHQ,QAAAA,MAAM,EAAE;AACJL,UAAAA,IAAI,EAAEH,IAAI,CAACG;AADP;AADL,OAAP;AAKH,KANM,CADJ;AAQHW,IAAAA,QAAQ,EAAE;AARP,GAAP;AAUH","sourcesContent":["import { useRouter } from 'next/router';\r\nimport ErrorPage from 'next/error';\r\nimport { getPostBySlug, getAllPosts } from '../../lib/api';\r\nimport Head from 'next/head';\r\nimport markdownToHtml from '../../lib/markdownToHtml';\r\n\r\nexport default function Post({ post }) {\r\n    const router = useRouter();\r\n    if (!router.isFallback && !post?.slug) {\r\n        return <ErrorPage statusCode={404} />;\r\n    }\r\n    return (\r\n        <div>\r\n            {router.isFallback ? (\r\n                <span>Loadingâ€¦</span>\r\n            ) : (\r\n                    <>\r\n                        <article className=\"mb-32\">\r\n                            <Head>\r\n                                <title>\r\n                                    {post.title} | Next.js Blog Example with markdown\r\n                </title>\r\n                            </Head>\r\n                            <div dangerouslySetInnerHTML={{ __html: post.content }}></div>\r\n                        </article>\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n    const post = getPostBySlug(params.slug, [\r\n        'title',\r\n        'date',\r\n        'slug',\r\n        'author',\r\n        'content',\r\n        'ogImage',\r\n        'coverImage',\r\n    ]);\r\n    const content = await markdownToHtml(post.content || '');\r\n\r\n    return {\r\n        props: {\r\n            post: {\r\n                ...post,\r\n                content,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport async function getStaticPaths() {\r\n    const posts = getAllPosts(['slug']);\r\n\r\n    return {\r\n        paths: posts.map((post) => {\r\n            return {\r\n                params: {\r\n                    slug: post.slug,\r\n                },\r\n            };\r\n        }),\r\n        fallback: false,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}