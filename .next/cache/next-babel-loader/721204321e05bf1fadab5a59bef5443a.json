{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alari\\\\code\\\\internet-simple\\\\components\\\\TopBar.tsx\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(() => ({\n  topBar: {\n    marginBottom: 30,\n    backgroundColor: '#E5989B'\n  },\n  toolBar: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  tagButton: {\n    marginRight: 15\n  }\n}));\n\nconst TopBar = ({\n  tags\n}) => {\n  const {\n    setSelectedTag\n  } = UseAppContext();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    className: classes.topBar,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolBar,\n      children: [tags.map(tag => /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.tagButton,\n        variant: \"contained\",\n        onClick: () => setSelectedTag(tag),\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.tagButton,\n        variant: \"contained\",\n        onClick: () => setSelectedTag(undefined),\n        children: \"Tout\"\n      }, \"all\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TopBar;","map":{"version":3,"sources":["C:/Users/alari/code/internet-simple/components/TopBar.tsx"],"names":["makeStyles","AppBar","Toolbar","Button","useStyles","topBar","marginBottom","backgroundColor","toolBar","display","justifyContent","tagButton","marginRight","TopBar","tags","setSelectedTag","UseAppContext","classes","map","tag","undefined"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;AAChCK,EAAAA,MAAM,EAAE;AACJC,IAAAA,YAAY,EAAE,EADV;AAEJC,IAAAA,eAAe,EAAE;AAFb,GADwB;AAKhCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,cAAc,EAAE;AAFX,GALuB;AAShCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE;AADN;AATqB,CAAP,CAAD,CAA5B;;AAkBA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAyB;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAmBC,aAAa,EAAtC;AACA,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,sBACI,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEa,OAAO,CAACZ,MAA7C;AAAA,2BACQ,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEY,OAAO,CAACT,OAA5B;AAAA,iBACKM,IAAI,CAACI,GAAL,CAASC,GAAG,iBACT,QAAC,MAAD;AACI,QAAA,SAAS,EAAEF,OAAO,CAACN,SADvB;AAEI,QAAA,OAAO,EAAC,WAFZ;AAII,QAAA,OAAO,EAAE,MAAMI,cAAc,CAACI,GAAD,CAJjC;AAAA,kBAMKA;AANL,SAGSA,GAHT;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAWI,QAAC,MAAD;AACI,QAAA,SAAS,EAAEF,OAAO,CAACN,SADvB;AAEI,QAAA,OAAO,EAAC,WAFZ;AAII,QAAA,OAAO,EAAE,MAAMI,cAAc,CAACK,SAAD,CAJjC;AAAA;AAAA,SAGQ,KAHR;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA3BD;;AA6BA,eAAeP,MAAf","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    topBar: {\r\n        marginBottom: 30,\r\n        backgroundColor: '#E5989B',\r\n    },\r\n    toolBar: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    tagButton: {\r\n        marginRight: 15,\r\n    },\r\n}));\r\n\r\ninterface TopBarProps {\r\n    tags: string[];\r\n}\r\n\r\nconst TopBar = ({tags}: TopBarProps) => {\r\n    const {setSelectedTag} = UseAppContext();\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.topBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    {tags.map(tag => (\r\n                        <Button\r\n                            className={classes.tagButton}\r\n                            variant=\"contained\"\r\n                            key={tag}\r\n                            onClick={() => setSelectedTag(tag)}\r\n                        >\r\n                            {tag}\r\n                        </Button>\r\n                    ))}\r\n                    <Button\r\n                        className={classes.tagButton}\r\n                        variant=\"contained\"\r\n                        key=\"all\"\r\n                        onClick={() => setSelectedTag(undefined)}\r\n                    >\r\n                        Tout\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n    );\r\n};\r\n\r\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}