{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/caseSensitive/Code/internet-simple/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { useState } from \"react\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      minWidth: 275\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    topBar: {\n      marginBottom: 30\n    },\n    toolBar: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    tagButton: {\n      marginRight: 15\n    }\n  };\n});\n\nvar Home = function Home(_ref) {\n  _s();\n\n  var posts = _ref.posts,\n      tags = _ref.tags;\n\n  var _useState = useState(),\n      tagSelected = _useState[0],\n      setTagSelected = _useState[1];\n\n  var classes = useStyles();\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.topBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolBar,\n        children: tags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.tagButton,\n            variant: \"contained\",\n            onClick: function onClick() {\n              return setTagSelected(tag);\n            },\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 2,\n        children: posts.filter(function (post) {\n          var _post$tags;\n\n          return tagSelected == undefined || ((_post$tags = post.tags) === null || _post$tags === void 0 ? void 0 : _post$tags.includes(tagSelected));\n        }).map(function (post) {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              children: [post.title, /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  children: \"Learn More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, _this)\n          }, post.slug, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n}; // eslint-disable-next-line @typescript-eslint/require-await\n\n\n_s(Home, \"oTVTGpfMNIEpEfLMldN+XyCutew=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Volumes/caseSensitive/Code/internet-simple/pages/index.tsx"],"names":["makeStyles","Grid","Card","CardActions","AppBar","Toolbar","Button","useState","useStyles","theme","root","minWidth","menuButton","marginRight","spacing","title","flexGrow","topBar","marginBottom","toolBar","display","justifyContent","tagButton","Home","posts","tags","tagSelected","setTagSelected","classes","console","log","map","tag","filter","post","undefined","includes","slug"],"mappings":"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","sourcesContent":["import { getAllPosts } from \"../lib/api\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    topBar: {\n        marginBottom: 30,\n    },\n    toolBar: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    tagButton: {\n        marginRight: 15,\n    },\n}));\n\nconst Home = ({ posts, tags }) => {\n    const [tagSelected, setTagSelected] = useState();\n    const classes = useStyles();\n    console.log(posts);\n    return (\n        <>\n            <AppBar position=\"static\" className={classes.topBar}>\n                <Toolbar className={classes.toolBar}>\n                    {tags.map(tag => (\n                        <Button\n                            className={classes.tagButton}\n                            variant=\"contained\"\n                            key={tag}\n                            onClick={() => setTagSelected(tag)}\n                        >\n                            {tag}\n                        </Button>\n                    ))}\n                </Toolbar>\n            </AppBar>\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={2}>\n                    {posts.filter((post) => {\n                        return tagSelected == undefined || post.tags?.includes(tagSelected);\n                    })\n                        .map((post) => (\n                            <Grid key={post.slug} item>\n                                <Card className={classes.root} >\n                                    {post.title}\n                                    <CardActions>\n                                        <Button size=\"small\">Learn More</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function getStaticProps() {\n    const posts = getAllPosts([\n        'title',\n        'slug',\n        'author',\n        'tags',\n    ]);\n    const tags = new Set();\n    posts.forEach((post) => {\n        post.tags?.forEach((tag) => {\n            tags.add(tag);\n        });\n    });\n    return {\n        props: {\n            posts,\n            tags: Array.from(tags),\n        }\n    };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}