{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alari\\\\code\\\\internet-simple\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { useState } from \"react\";\nimport Category from '../components/Category';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      minWidth: 275\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    topBar: {\n      marginBottom: 30,\n      backgroundColor: '#E5989B'\n    },\n    toolBar: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    tagButton: {\n      marginRight: 15\n    }\n  };\n});\n\nvar Home = function Home(_ref) {\n  _s();\n\n  var posts = _ref.posts,\n      tags = _ref.tags;\n\n  var _useState = useState(),\n      tagSelected = _useState[0],\n      setTagSelected = _useState[1];\n\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.topBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolBar,\n        children: [tags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.tagButton,\n            variant: \"contained\",\n            onClick: function onClick() {\n              return setTagSelected(tag);\n            },\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.tagButton,\n          variant: \"contained\",\n          onClick: function onClick() {\n            return setTagSelected(undefined);\n          },\n          children: \"Tout\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 2,\n        children: tags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(Category, {\n            posts: posts.filter(function (post) {\n              var _post$tags;\n\n              return (_post$tags = post.tags) === null || _post$tags === void 0 ? void 0 : _post$tags.includes(tag);\n            }),\n            title: tag,\n            setTagSelected: setTagSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n}; // eslint-disable-next-line @typescript-eslint/require-await\n\n\n_s(Home, \"oTVTGpfMNIEpEfLMldN+XyCutew=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/alari/code/internet-simple/pages/index.tsx"],"names":["makeStyles","Grid","AppBar","Toolbar","Button","useState","Category","useStyles","theme","root","minWidth","menuButton","marginRight","spacing","topBar","marginBottom","backgroundColor","toolBar","display","justifyContent","tagButton","Home","posts","tags","tagSelected","setTagSelected","classes","map","tag","undefined","filter","post","includes"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from \"react\";\r\nimport { getAllPosts, Post } from \"../lib/api\";\r\nimport Category from '../components/Category';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    topBar: {\r\n        marginBottom: 30,\r\n        backgroundColor: '#E5989B',\r\n    },\r\n    toolBar: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    tagButton: {\r\n        marginRight: 15,\r\n    },\r\n}));\r\n\r\ninterface HomeProps {\r\n    posts: Post[];\r\n    tags: string[];\r\n}\r\n\r\nconst Home = ({ posts, tags }: HomeProps) => {\r\n    const [tagSelected, setTagSelected] = useState<string>();\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\" className={classes.topBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    {tags.map(tag => (\r\n                        <Button\r\n                            className={classes.tagButton}\r\n                            variant=\"contained\"\r\n                            key={tag}\r\n                            onClick={() => setTagSelected(tag)}\r\n                        >\r\n                            {tag}\r\n                        </Button>\r\n                    ))}\r\n                    <Button\r\n                        className={classes.tagButton}\r\n                        variant=\"contained\"\r\n                        key=\"all\"\r\n                        onClick={() => setTagSelected(undefined)}\r\n                    >\r\n                        Tout\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    {tags.map((tag: string) => {\r\n                        return (\r\n                            <Category posts={posts.filter((post: Post) => post.tags?.includes(tag))} title={tag} setTagSelected={setTagSelected} />\r\n                        );\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport async function getStaticProps() {\r\n    const posts = getAllPosts([\r\n        'title',\r\n        'slug',\r\n        'author',\r\n        'tags',\r\n        'summary',\r\n    ]);\r\n    const tags = new Set();\r\n    posts.forEach((post) => {\r\n        post.tags?.forEach((tag) => {\r\n            tags.add(tag);\r\n        });\r\n    });\r\n    return {\r\n        props: {\r\n            posts,\r\n            tags: Array.from(tags),\r\n        }\r\n    };\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}